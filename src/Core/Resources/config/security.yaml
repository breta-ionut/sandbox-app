services:
    # Encoders.
    Symfony\Component\Security\Core\Encoder\EncoderFactory:
        arguments:
            - ~ # Encoders.

    Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface: '@Symfony\Component\Security\Core\Encoder\EncoderFactory'

    Symfony\Component\Security\Core\Encoder\UserPasswordEncoder:
        arguments: ['@Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface']

    Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface: '@Symfony\Component\Security\Core\Encoder\UserPasswordEncoder'
    # End of - Encoders.

    # Authentication.
    Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager:
        arguments:
            - ~ # Providers.
            - ~ # Erase credentials.
        calls: [[setEventDispatcher, ['@Symfony\Contracts\EventDispatcher\EventDispatcherInterface']]]

    Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface: '@Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager'

    Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver: ~
    Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolverInterface: '@Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver'

    Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage: ~
    Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface: '@Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage'

    Symfony\Component\Security\Core\User\UserChecker: ~
    Symfony\Component\Security\Core\User\UserCheckerInterface: '@Symfony\Component\Security\Core\User\UserChecker'

    Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint:
        arguments:
            - ~ # HTTP port.
            - ~ # HTTPS port.

    Symfony\Component\Security\Http\Firewall:
        arguments:
            - '@Symfony\Component\Security\Http\FirewallMap'
            - '@Symfony\Contracts\EventDispatcher\EventDispatcherInterface'
        tags: [kernel.event_subscriber]

    Symfony\Component\Security\Http\FirewallMap: ~
    Symfony\Component\Security\Http\FirewallMapInterface: '@Symfony\Component\Security\Http\FirewallMap'

    Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler:
        abstract: true
        arguments:
            - '@Symfony\Component\Security\Http\HttpUtils'
            - ~ # Target URL.

    Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler:
        abstract: true
        arguments:
            - ~ # Cookies.

    Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler:
        arguments: ['@Symfony\Component\Security\Csrf\TokenStorage\ClearableTokenStorageInterface']

    Symfony\Component\Security\Http\Logout\SessionLogoutHandler: ~

    Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy:
        arguments:
            - ~ # Strategy.

    Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface: '@Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy'

    App\Core\Security\WatchdogAuthenticationHelper:
        arguments:
            - '@Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface'
            - '@Symfony\Contracts\EventDispatcher\EventDispatcherInterface'
            - ~ # Stateless firewalls.
            - '@Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface'

    # Listeners.
    Symfony\Component\Security\Http\Firewall\AccessListener:
        arguments:
            - '@Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface'
            - '@Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface'
            - '@Symfony\Component\Security\Http\AccessMapInterface'
            - '@Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface'

    Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener:
        arguments:
            - '@Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface'
            - ~ # Secret.
            - '@Psr\Log\LoggerInterface'
            - '@Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface'

    Symfony\Component\Security\Http\Firewall\ChannelListener:
        arguments:
            - '@Symfony\Component\Security\Http\AccessMapInterface'
            - '@Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint'
            - '@Psr\Log\LoggerInterface'

    Symfony\Component\Security\Http\Firewall\ContextListener:
        abstract: true
        arguments:
            - '@Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface'
            - ~ # User providers.
            - ~ # Firewall.
            - '@Psr\Log\LoggerInterface'
            - '@Symfony\Contracts\EventDispatcher\EventDispatcherInterface'
            - '@Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolverInterface'

    Symfony\Component\Security\Http\Firewall\ExceptionListener:
        abstract: true
        arguments:
            - '@Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface'
            - '@Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolverInterface'
            - '@Symfony\Component\Security\Http\HttpUtils'
            - ~ # Firewall.
            - ~ # Authentication entry point.
            - ~ # Error page.
            - ~ # Access denied handler.
            - '@Psr\Log\LoggerInterface'
            - ~ # Stateless.

    Symfony\Component\Security\Http\Firewall\LogoutListener:
        abstract: true
        arguments:
            - '@Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface'
            - '@Symfony\Component\Security\Http\HttpUtils'
            - ~ # Logout success handler.
            - ~ # Options.
            - '@Symfony\Component\Security\Csrf\CsrfTokenManagerInterface'

    App\Core\Security\WatchdogAuthenticationListener:
        abstract: true
        arguments:
            - ~ # Firewall.
            - ~ # Authenticator.
            - '@Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface'
            - '@App\Core\Security\WatchdogAuthenticationHelper'
            - '@Psr\Log\LoggerInterface'
    # End of - Listeners.

    # Providers.
    Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider:
        arguments:
            - ~ # Secret.

    App\Core\Security\WatchdogAuthenticationProvider:
        abstract: true
        arguments:
            - ~ # Firewall.
            - ~ # Authenticator.
            - ~ # User provider.
            - ~ # User checker.
    # End of - Providers.
    # End of - Authentication.

    # Authorization.
    Symfony\Component\Security\Core\Authorization\AccessDecisionManager:
        arguments:
            - ~ # Voters.
            - ~ # Strategy.
            - ~ # Allow if all abstain decisions.
            - ~ # Allow if equal granted denied decisions.

    Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface: '@Symfony\Component\Security\Core\Authorization\AccessDecisionManager'

    Symfony\Component\Security\Core\Authorization\AuthorizationChecker:
        arguments:
            - '@Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface'
            - '@Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface'
            - '@Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface'
            - ~ # Always authenticate.

    Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface: '@Symfony\Component\Security\Core\Authorization\AuthorizationChecker'

    Symfony\Component\Security\Http\AccessMap: ~
    Symfony\Component\Security\Http\AccessMapInterface: '@Symfony\Component\Security\Http\AccessMap'
    # End of - Authorization.

    # CSRF.
    Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator: ~
    Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface: '@Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator'

    Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage:
        arguments: ['@Symfony\Component\HttpFoundation\Session\SessionInterface']

    Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface: '@Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage'
    Symfony\Component\Security\Csrf\TokenStorage\ClearableTokenStorageInterface: '@Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage'

    Symfony\Component\Security\Csrf\CsrfTokenManager:
        arguments:
            - '@Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface'
            - '@Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface'
            - '@Symfony\Component\HttpFoundation\RequestStack'

    Symfony\Component\Security\Csrf\CsrfTokenManagerInterface: '@Symfony\Component\Security\Csrf\CsrfTokenManager'
    # End of - CSRF.

    # Other.
    Symfony\Component\Security\Http\HttpUtils:
        arguments:
            - '@Symfony\Component\Routing\Generator\UrlGeneratorInterface'
            - '@Symfony\Component\Routing\Matcher\UrlMatcherInterface'
    # End of - Other.
