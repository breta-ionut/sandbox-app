parameters:
    serializer.mapping.cache.file: '%kernel.cache_dir%/serialization.php'

services:
    # Mapping.
    Symfony\Component\Serializer\Mapping\Loader\LoaderChain:
        arguments:
            - [] # Loaders.

    Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory:
        arguments: ['@Symfony\Component\Serializer\Mapping\Loader\LoaderChain']

    Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface: '@Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory'

    serializer.mapping.cache:
        class: Psr\Cache\CacheItemPoolInterface
        factory: [Symfony\Component\Cache\Adapter\PhpArrayAdapter, create]
        arguments: ['%serializer.mapping.cache.file%', '@cache.serializer']

    Symfony\Component\Serializer\Mapping\Factory\CacheClassMetadataFactory:
        decorates: Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory
        arguments:
            - '@Symfony\Component\Serializer\Mapping\Factory\CacheClassMetadataFactory.inner'
            - '@serializer.mapping.cache'

    Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata:
        arguments: ['@Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface']

    Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface: '@Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata'
    # End of - Mapping.

    Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter: ~

    Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter:
        arguments:
            - '@Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface'
            - ~ # Fallback name converter.

    Symfony\Component\Serializer\NameConverter\NameConverterInterface: '@Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter'
    Symfony\Component\Serializer\NameConverter\AdvancedNameConverterInterface: '@Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter'

    # Normalizers.
    Symfony\Component\Serializer\Normalizer\ArrayDenormalizer:
        tags: [{name: serializer.normalizer, priority: -900}]

    Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer:
        arguments: [[], '@Symfony\Component\Serializer\NameConverter\NameConverterInterface']
        tags: [{name: serializer.normalizer, priority: -900}]

    Symfony\Component\Serializer\Normalizer\CustomNormalizer:
        tags: [{name: serializer.normalizer, priority: -900}]

    Symfony\Component\Serializer\Normalizer\DataUriNormalizer:
        tags: [{name: serializer.normalizer, priority: -900}]

    Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer:
        tags: [{name: serializer.normalizer, priority: -900}]

    Symfony\Component\Serializer\Normalizer\DateTimeNormalizer:
        tags: [{name: serializer.normalizer, priority: -900}]

    Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer:
        tags: [{name: serializer.normalizer, priority: -900}]

    Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer:
        tags: [{name: serializer.normalizer, priority: -900}]

    Symfony\Component\Serializer\Normalizer\ObjectNormalizer:
        arguments:
            - '@Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface'
            - '@Symfony\Component\Serializer\NameConverter\NameConverterInterface'
            - '@Symfony\Component\PropertyAccess\PropertyAccessorInterface'
            - '@Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface'
            - '@Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface'
            - ~
            - !abstract default context
        tags: [{name: serializer.normalizer, priority: -1000}]

    Symfony\Component\Serializer\Normalizer\ProblemNormalizer:
        arguments: ['%kernel.debug%']
        tags: [{name: serializer.normalizer, priority: -900}]
    # End of - Normalizers.

    # Encoders.
    Symfony\Component\Serializer\Encoder\CsvEncoder:
        tags: [serializer.encoder]

    Symfony\Component\Serializer\Encoder\JsonEncoder:
        tags: [serializer.encoder]

    Symfony\Component\Serializer\Encoder\XmlEncoder:
        tags: [serializer.encoder]

    Symfony\Component\Serializer\Encoder\YamlEncoder:
        tags: [serializer.encoder]
    # End of - Encoders.

    Symfony\Component\Serializer\Serializer:
        arguments: [!abstract normalizers, !abstract encoders]

    Symfony\Component\Serializer\SerializerInterface: '@Symfony\Component\Serializer\Serializer'
    Symfony\Component\Serializer\Normalizer\NormalizerInterface: '@Symfony\Component\Serializer\Serializer'
    Symfony\Component\Serializer\Normalizer\DenormalizerInterface: '@Symfony\Component\Serializer\Serializer'
    Symfony\Component\Serializer\Encoder\EncoderInterface: '@Symfony\Component\Serializer\Serializer'
    Symfony\Component\Serializer\Encoder\DecoderInterface: '@Symfony\Component\Serializer\Serializer'
